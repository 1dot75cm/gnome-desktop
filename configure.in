AC_INIT([gnome-desktop], [2.20.2],
        [http://bugzilla.gnome.org/enter_bug.cgi?product=gnome-desktop])
AC_CONFIG_SRCDIR([libgnome-desktop])

AM_INIT_AUTOMAKE([1.9 foreign no-dist-gzip dist-bzip2])

AC_CONFIG_HEADERS([config.h])

AC_CONFIG_MACRO_DIR([m4])

dnl make sure we keep ACLOCAL_FLAGS around for maintainer builds to work
AC_SUBST(ACLOCAL_AMFLAGS, "\${ACLOCAL_FLAGS}")

# Before making a release, the LT_VERSION string should be modified.
# The string is of the form C:R:A.
# - If interfaces have been changed or added, but binary compatibility has
#   been preserved, change to C+1:0:A+1
# - If binary compatibility has been broken (eg removed or changed interfaces)
#   change to C+1:0:0
# - If the interface is the same as the previous version, change to C:R+1:A

LT_VERSION=5:15:3
AC_SUBST(LT_VERSION)

AM_MAINTAINER_MODE

IT_PROG_INTLTOOL([0.35.0])

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_LIBTOOL_WIN32_DLL
AC_PROG_LIBTOOL
PKG_PROG_PKG_CONFIG

GNOME_PLATFORM=2
GNOME_MINOR=20
GNOME_MICRO=2
GNOME_DISTRIBUTOR="GNOME.Org"
GNOME_DATE=`date +"%Y-%m-%d"`

AC_ARG_WITH(gnome_distributor, [  --with-gnome-distributor=DISTRIBUTOR  Specify name of GNOME distributor])

if test "x$with_gnome_distributor" != x ; then
  GNOME_DISTRIBUTOR=$with_gnome_distributor
fi

AC_SUBST(GNOME_PLATFORM)
AC_SUBST(GNOME_MINOR)
AC_SUBST(GNOME_MICRO)
AC_SUBST(GNOME_DISTRIBUTOR)
AC_SUBST(GNOME_DATE)

GNOME_COMMON_INIT
GNOME_DEBUG_CHECK
GNOME_COMPILE_WARNINGS([maximum])
GNOME_MAINTAINER_MODE_DEFINES

# As a special favour for vuntz, support --disable-deprecations

AC_ARG_ENABLE([deprecations],
	[AS_HELP_STRING([--disable-deprecations],[don't warn about deprecated usages])],
	[],[enable_deprecations=yes])
if test "$enable_deprecations" = "no"; then
	DISABLE_DEPRECATED=""
	AC_SUBST([DISABLE_DEPRECATED])
fi

dnl If you add a version number here, you *must* add an AC_SUBST line for
dnl it too, or it will never make it into the spec file!

LIBXML_REQUIRED=2.4.20
GDK_PIXBUF_REQUIRED=2.4.0
GTK_REQUIRED=2.11.3
GLIB_REQUIRED=2.13.0
GCONF_REQUIRED=2.0.0
LIBGNOMECANVAS_REQUIRED=2.0.0
LIBGNOMEUI_REQUIRED=2.6.0
GNOME_VFS_REQUIRED=2.0.0
STARTUP_NOTIFICATION_REQUIRED=0.5

AC_SUBST(LIBXML_REQUIRED)
AC_SUBST(GTK_REQUIRED)
AC_SUBST(GLIB_REQUIRED)
AC_SUBST(GDK_PIXBUF_REQUIRED)
AC_SUBST(GCONF_REQUIRED)
AC_SUBST(LIBGNOMEUI_REQUIRED)
AC_SUBST(LIBGNOMECANVAS_REQUIRED)
AC_SUBST(GNOME_VFS_REQUIRED)
AC_SUBST(STARTUP_NOTIFICATION_REQUIRED)

if $PKG_CONFIG --atleast-version $STARTUP_NOTIFICATION_REQUIRED libstartup-notification-1.0; then
  echo "Building with libstartup-notification"
  AC_DEFINE(HAVE_STARTUP_NOTIFICATION, 1,
            [Define if the startup-notification package is present])
  with_startup_notification=yes
  STARTUP_NOTIFICATION_PACKAGE=libstartup-notification-1.0
else
  echo "***** WARNING: Building without libstartup-notification"
  with_startup_notification=no
  STARTUP_NOTIFICATION_PACKAGE=
fi

AC_SUBST(STARTUP_NOTIFICATION_PACKAGE)

dnl pkg-config dependency checks

PKG_CHECK_MODULES(GNOME_DESKTOP, libxml-2.0 >= $LIBXML_REQUIRED gdk-pixbuf-2.0 >= $GDK_PIXBUF_REQUIRED gtk+-2.0 >= $GTK_REQUIRED glib-2.0 >= $GLIB_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED gconf-2.0 >= $GCONF_REQUIRED gnome-vfs-2.0 >= $GNOME_VFS_REQUIRED $STARTUP_NOTIFICATION_PACKAGE)

PKG_CHECK_MODULES(GNOME_ABOUT, libxml-2.0 >= $LIBXML_REQUIRED gdk-pixbuf-2.0 >= $GDK_PIXBUF_REQUIRED gtk+-2.0 >= $GTK_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED libgnomecanvas-2.0 >= $LIBGNOMECANVAS_REQUIRED)

dnl gnome-doc-utils stuff

GNOME_DOC_INIT

dnl scrollkeeper checks

AC_PATH_PROG(SCROLLKEEPER_CONFIG, scrollkeeper-config,no)
if test x$SCROLLKEEPER_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find scrollkeeper-config. Please install the scrollkeeper package)
fi

dnl Language Support

GETTEXT_PACKAGE=gnome-desktop-2.0
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE",
		   [The gettext translation domain])
AC_SUBST(GETTEXT_PACKAGE)

AM_GLIB_GNU_GETTEXT


dnl Place to look for KDE menus

AC_ARG_WITH(kde-datadir, [  --with-kde-datadir=DIR  Location of KDE data])

if test "x$with_kde_datadir" = x ; then
  kde_datadir=/usr/share
else
  kde_datadir=$with_kde_datadir
fi

AC_DEFINE_UNQUOTED(KDE_MENUDIR, "$kde_datadir/applnk",
		   [The KDE menu directory])
AC_DEFINE_UNQUOTED(KDE_ICONDIR, "$kde_datadir/icons",
                   [The KDE icon directory])
AC_DEFINE_UNQUOTED(KDE_MINI_ICONDIR, "$kde_datadir/icons/mini",
                   [The KDE mini icon directory])

dnl Don't use AC_PROG_AWK since we need the full pathname.
AC_PATH_PROGS(AWK, mawk gawk nawk awk, )
AC_PATH_PROGS(PERL, perl5 perl)

dnl define a MAINT-like variable REBUILD which is set if Perl
dnl and awk are found, so autogenerated sources can be rebuilt
AC_ARG_ENABLE(rebuilds, [  --disable-rebuilds      disable all source autogeneration rules],,enable_rebuilds=yes)
REBUILD=\#
if test "x$enable_rebuilds" = "xyes" && \
     test -n "$PERL" && \
     $PERL -e 'exit !($] >= 5.002)' > /dev/null 2>&1 && \
     test -n "$AWK" ; then
  REBUILD=
fi
AC_SUBST(REBUILD)

# check for gtk-doc
GTK_DOC_CHECK([1.4])

AC_CONFIG_FILES([
Makefile
gnome-about/Makefile
gnome-about/gnome-about.desktop.in
gnome-about/headers/Makefile
libgnome-desktop/Makefile
libgnome-desktop/libgnome/Makefile
libgnome-desktop/libgnomeui/Makefile
libgnome-desktop/gnome-desktop-2.0.pc
libgnome-desktop/gnome-desktop-2.0-uninstalled.pc
docs/Makefile
docs/reference/Makefile
docs/reference/gnome-desktop/Makefile
gnome-version.xml.in
po/Makefile.in
pixmaps/Makefile
desktop-docs/Makefile
desktop-docs/fdl/Makefile
desktop-docs/gpl/Makefile
desktop-docs/lgpl/Makefile
man/Makefile
])

AC_OUTPUT
